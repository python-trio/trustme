name: CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

jobs:
  Windows:
    name: 'Windows (${{ matrix.python }})'
    timeout-minutes: 20
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        shell: bash
      - name: "Upload coverage data"
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: "empty/.coverage.*"
          if-no-files-found: error

  Ubuntu:
    name: 'Ubuntu (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy3.9']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
      - name: "Upload coverage data"
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: "empty/.coverage.*"
          if-no-files-found: error

  macOS:
    name: 'macOS (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
      - name: "Upload coverage data"
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: "empty/.coverage.*"
          if-no-files-found: error

  coverage:
    if: always()
    runs-on: "ubuntu-latest"
    needs: ["Windows", "Ubuntu", "macOS"]
    steps:
      - uses: actions/checkout@v3
      - name: "Use latest Python so it understands all syntax"
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: "Install coverage"
        run: "python -m pip install --upgrade coverage[toml]"

      - name: "Download coverage data"
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: "Combine & check coverage"
        run: |
          python -m coverage combine
          python -m coverage report --ignore-errors --show-missing --fail-under=100
